name: CI

on:
  push:
    branches:
      - 3.4
env:
  APP_ENV: test

jobs:
  symfony:
    name: Symfony 3.4 (PHP ${{ matrix.php-versions }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        php-versions: ['7.1', '7.2', '7.3', '7.4', '8.0']
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4

      - name: Setup PHP with extensions and Composer v2
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          tools: composer:v2
          extensions: ctype, iconv, intl, json, mbstring, pdo, pdo_sqlite
        env:
          update: true

      - name: Yarn install
        uses: borales/actions-yarn@v2.3.0
        with:
          cmd: install
      - name: Yarn build
        uses: borales/actions-yarn@v2.3.0
        with:
          cmd: run encore production

      - name: Validate composer.json
        run: composer validate

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v2.1.3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-${{ matrix.php-versions }}-composer-${{ hashFiles('composer.json') }}
          restore-keys: ${{ runner.os }}-${{ matrix.php-versions }}-composer-

      - name: Install Composer dependencies
        if: matrix.php-versions < 8
        run: composer update --no-progress

      - name: Install Composer dependencies
        if: matrix.php-versions == 8.0
        run: composer update --no-progress --ignore-platform-req=php

      - name: Download Symfony CLI
        run: wget https://get.symfony.com/cli/installer -O - | bash

      - name: Update database schema
        run: /home/runner/.symfony/bin/symfony console d:s:u -f

      - name: Load Doctrine fixtures
        run: /home/runner/.symfony/bin/symfony console d:f:l -q

      - name: Run functionnal tests
        run: |
          vendor/bin/codecept run Functional